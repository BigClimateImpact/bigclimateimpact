/*
! tailwindcss v3.0.0-alpha.1 | MIT License | https://tailwindcss.com
*//*
1. Prevent padding and border from affecting element width. (https://github.com/mozdevs/cssremedy/issues/4)
2. Allow adding a border to an element by just adding a border-width. (https://github.com/tailwindcss/tailwindcss/pull/116)
*/

*,
::before,
::after {
  box-sizing: border-box; /* 1 */
  border-width: 0; /* 2 */
  border-style: solid; /* 2 */
  border-color: currentColor; /* 2 */
}

/*
1. Use a consistent sensible line-height in all browsers.
2. Prevent adjustments of font size after orientation changes in iOS.
3. Use a more readable tab size.
4. Use the user's configured `sans` font-family by default.
*/

html {
  line-height: 1.5; /* 1 */
  -webkit-text-size-adjust: 100%; /* 2 */
  -moz-tab-size: 4; /* 3 */
  -o-tab-size: 4;
     tab-size: 4; /* 3 */
  font-family: Overpass, ui-sans-serif, system-ui; /* 4 */
}

/*
1. Remove the margin in all browsers.
2. Inherit line-height from `html` so users can set them as a class directly on the `html` element.
*/

body {
  margin: 0; /* 1 */
  line-height: inherit; /* 2 */
}

/*
1. Add the correct height in Firefox.
2. Correct the inheritance of border color in Firefox. (https://bugzilla.mozilla.org/show_bug.cgi?id=190655)
3. Ensure horizontal rules are visible by default.
*/

hr {
  height: 0; /* 1 */
  color: inherit; /* 2 */
  border-top-width: 1px; /* 3 */
}

/*
Add the correct text decoration in Chrome, Edge, and Safari.
*/

abbr[title] {
  -webkit-text-decoration: underline dotted;
          text-decoration: underline dotted;
}

/*
Remove the default font size and weight for headings.
*/

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: inherit;
  font-weight: inherit;
}

/*
Reset links to optimize for opt-in styling instead of opt-out.
*/

a {
  color: inherit;
  text-decoration: inherit;
}

/*
Add the correct font weight in Edge and Safari.
*/

b,
strong {
  font-weight: bolder;
}

/*
1. Use the user's configured `mono` font family by default.
2. Correct the odd `em` font sizing in all browsers.
*/

code,
kbd,
samp,
pre {
  font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; /* 1 */
  font-size: 1em; /* 2 */
}

/*
Add the correct font size in all browsers.
*/

small {
  font-size: 80%;
}

/*
Prevent `sub` and `sup` elements from affecting the line height in all browsers.
*/

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline;
}

sub {
  bottom: -0.25em;
}

sup {
  top: -0.5em;
}

/*
1. Remove text indentation from table contents in Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=999088, https://bugs.webkit.org/show_bug.cgi?id=201297)
2. Correct table border color inheritance in all Chrome and Safari. (https://bugs.chromium.org/p/chromium/issues/detail?id=935729, https://bugs.webkit.org/show_bug.cgi?id=195016)
3. Remove gaps between table borders by default.
*/

table {
  text-indent: 0; /* 1 */
  border-color: inherit; /* 2 */
  border-collapse: collapse;  /* 3 */
}

/*
1. Change the font styles in all browsers.
2. Remove the margin in Firefox and Safari.
3. Remove default padding in all browsers.
*/

button,
input,
optgroup,
select,
textarea {
  font-family: inherit; /* 1 */
  font-size: 100%; /* 1 */
  line-height: inherit; /* 1 */
  color: inherit; /* 1 */
  margin: 0; /* 2 */
  padding: 0; /* 3 */
}

/*
Remove the inheritance of text transform in Edge and Firefox.
*/

button,
select {
  text-transform: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Remove default button styles.
*/

button,
[type='button'],
[type='reset'],
[type='submit'] {
  -webkit-appearance: button; /* 1 */
  background-color: transparent; /* 2 */
  background-image: none; /* 2 */
}

/*
Use the modern Firefox focus style for all focusable elements.
*/

:-moz-focusring {
  outline: auto;
}

/*
Remove the additional `:invalid` styles in Firefox. (https://github.com/mozilla/gecko-dev/blob/2f9eacd9d3d995c937b4251a5557d95d494c9be1/layout/style/res/forms.css#L728-L737)
*/

:-moz-ui-invalid {
  box-shadow: none;
}

/*
Add the correct vertical alignment in Chrome and Firefox.
*/

progress {
  vertical-align: baseline;
}

/*
Correct the cursor style of increment and decrement buttons in Safari.
*/

::-webkit-inner-spin-button,
::-webkit-outer-spin-button {
  height: auto;
}

/*
1. Correct the odd appearance in Chrome and Safari.
2. Correct the outline style in Safari.
*/

[type='search'] {
  -webkit-appearance: textfield; /* 1 */
  outline-offset: -2px; /* 2 */
}

/*
Remove the inner padding in Chrome and Safari on macOS.
*/

::-webkit-search-decoration {
  -webkit-appearance: none;
}

/*
1. Correct the inability to style clickable types in iOS and Safari.
2. Change font properties to `inherit` in Safari.
*/

::-webkit-file-upload-button {
  -webkit-appearance: button; /* 1 */
  font: inherit; /* 2 */
}

/*
Add the correct display in Chrome and Safari.
*/

summary {
  display: list-item;
}

/*
Removes the default spacing and border for appropriate elements.
*/

blockquote,
dl,
dd,
h1,
h2,
h3,
h4,
h5,
h6,
hr,
figure,
p,
pre {
  margin: 0;
}

fieldset {
  margin: 0;
  padding: 0;
}

legend {
  padding: 0;
}

ol,
ul {
  list-style: none;
  margin: 0;
  padding: 0;
}

/*
Prevent resizing textareas horizontally by default.
*/

textarea {
  resize: vertical;
}

/*
1. Reset the default placeholder opacity in Firefox. (https://github.com/tailwindlabs/tailwindcss/issues/3300)
2. Set the default placeholder color to the user's configured gray 400 color.
*/

input::-moz-placeholder, textarea::-moz-placeholder {
  opacity: 1;  /* 1 */
  color: #9ca3af; /* 2 */
}

input:-ms-input-placeholder, textarea:-ms-input-placeholder {
  opacity: 1;  /* 1 */
  color: #9ca3af; /* 2 */
}

input::placeholder,
textarea::placeholder {
  opacity: 1;  /* 1 */
  color: #9ca3af; /* 2 */
}

/*
Set the default cursor for buttons.
*/

button,
[role="button"] {
  cursor: pointer;
}

/*
1. Make replaced elements `display: block` by default. (https://github.com/mozdevs/cssremedy/issues/14)
2. Add `vertical-align: middle` to align replaced elements more sensibly by default. (https://github.com/jensimmons/cssremedy/issues/14#issuecomment-634934210)
   This can trigger a poorly considered lint error in some tools but is included by design.
*/

img,
svg,
video,
canvas,
audio,
iframe,
embed,
object {
  display: block; /* 1 */
  vertical-align: middle; /* 2 */
}

/*
Constrain images and videos to the parent width and preserve their intrinsic aspect ratio. (https://github.com/mozdevs/cssremedy/issues/14)
*/

img,
video {
  max-width: 100%;
  height: auto;
}

/*
Ensure the default browser behavior of the `hidden` attribute.
*/

[hidden] {
  display: none;
}

*, ::before, ::after {
  --tw-border-opacity: 1;
  border-color: rgb(229 231 235 / var(--tw-border-opacity));
  --tw-ring-offset-shadow: 0 0 #0000;
  --tw-ring-shadow: 0 0 #0000;
  --tw-shadow: 0 0 #0000;
}

:root {
  background-color: hsla(var(--b1)/var(--tw-bg-opacity,1));
  color: hsla(var(--bc)/var(--tw-text-opacity,1));
}

html {
  -webkit-tap-highlight-color: transparent;
}

:root {
  --p: 198 38.7% 26.9%;
  --pf: 183 63.1% 32.9%;
  --pc: 150 81.3% 79%;
  --s: 150 81.3% 79%;
  --sf: 140 66.4% 58%;
  --sc: 198 38.7% 26.9%;
  --a: 7 82.3% 71.2%;
  --af: 6 82.2% 64.7%;
  --ac: 0 0% 100%;
  --n: 194 9.4% 27.3%;
  --nf: 49 11.5% 62.4%;
  --nc: 0 0% 100%;
  --b1: 0 0% 100%;
  --b2: 210 20% 98%;
  --b3: 216 12.2% 83.9%;
  --bc: 198 38.7% 26.9%;
  --in: 207 89.8% 53.9%;
  --su: 160 53.8% 43.3%;
  --wa: 36 100% 50%;
  --er: 14 100% 57.1%;
}
    @font-face {
      font-family: Signika;
      src: url("/Signika-VariableFont_wght.ttf");
    }
    @font-face {
      font-family: Overpass;
      src: url("/Overpass-VariableFont_wght.ttf");
    }
    @font-face {
      font-family: OverpassItalic;
      src: url("/Overpass-Italic-VariableFont_wght.ttf");
    }
.prose {
  color: #374151;
  max-width: 65ch;
}
.prose :where([class~="lead"]):not(:where([class~="not-prose"] *)) {
  color: #4b5563;
  font-size: 1.25em;
  line-height: 1.6;
  margin-top: 1.2em;
  margin-bottom: 1.2em;
}
.prose :where(a):not(:where([class~="not-prose"] *)) {
  color: #111827;
  text-decoration: underline;
  font-weight: 500;
}
.prose :where(strong):not(:where([class~="not-prose"] *)) {
  color: #111827;
  font-weight: 600;
}
.prose :where(ol[type="A"]):not(:where([class~="not-prose"] *)) {
  --list-counter-style: upper-alpha;
}
.prose :where(ol[type="a"]):not(:where([class~="not-prose"] *)) {
  --list-counter-style: lower-alpha;
}
.prose :where(ol[type="A" s]):not(:where([class~="not-prose"] *)) {
  --list-counter-style: upper-alpha;
}
.prose :where(ol[type="a" s]):not(:where([class~="not-prose"] *)) {
  --list-counter-style: lower-alpha;
}
.prose :where(ol[type="I"]):not(:where([class~="not-prose"] *)) {
  --list-counter-style: upper-roman;
}
.prose :where(ol[type="i"]):not(:where([class~="not-prose"] *)) {
  --list-counter-style: lower-roman;
}
.prose :where(ol[type="I" s]):not(:where([class~="not-prose"] *)) {
  --list-counter-style: upper-roman;
}
.prose :where(ol[type="i" s]):not(:where([class~="not-prose"] *)) {
  --list-counter-style: lower-roman;
}
.prose :where(ol[type="1"]):not(:where([class~="not-prose"] *)) {
  --list-counter-style: decimal;
}
.prose :where(ol > li):not(:where([class~="not-prose"] *)) {
  position: relative;
  padding-left: 1.75em;
}
.prose :where(ol > li):not(:where([class~="not-prose"] *))::before {
  content: counter(list-item, var(--list-counter-style, decimal)) ".";
  position: absolute;
  font-weight: 400;
  color: #6b7280;
  left: 0;
}
.prose :where(ul > li):not(:where([class~="not-prose"] *)) {
  position: relative;
  padding-left: 1.75em;
}
.prose :where(ul > li):not(:where([class~="not-prose"] *))::before {
  content: "";
  position: absolute;
  background-color: #d1d5db;
  border-radius: 50%;
  width: 0.375em;
  height: 0.375em;
  top: calc(0.875em - 0.1875em);
  left: 0.25em;
}
.prose :where(hr):not(:where([class~="not-prose"] *)) {
  border-color: #e5e7eb;
  border-top-width: 1px;
  margin-top: 3em;
  margin-bottom: 3em;
}
.prose :where(blockquote):not(:where([class~="not-prose"] *)) {
  font-weight: 500;
  font-style: italic;
  color: #111827;
  border-left-width: 0.25rem;
  border-left-color: #e5e7eb;
  quotes: "\201C""\201D""\2018""\2019";
  margin-top: 1.6em;
  margin-bottom: 1.6em;
  padding-left: 1em;
}
.prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"] *))::before {
  content: open-quote;
}
.prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"] *))::after {
  content: close-quote;
}
.prose :where(h1):not(:where([class~="not-prose"] *)) {
  color: #111827;
  font-weight: 800;
  font-size: 2.25em;
  margin-top: 0;
  margin-bottom: 0.8888889em;
  line-height: 1.1111111;
}
.prose :where(h1 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 900;
}
.prose :where(h2):not(:where([class~="not-prose"] *)) {
  color: #111827;
  font-weight: 700;
  font-size: 1.5em;
  margin-top: 2em;
  margin-bottom: 1em;
  line-height: 1.3333333;
}
.prose :where(h2 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 800;
}
.prose :where(h3):not(:where([class~="not-prose"] *)) {
  color: #111827;
  font-weight: 600;
  font-size: 1.25em;
  margin-top: 1.6em;
  margin-bottom: 0.6em;
  line-height: 1.6;
}
.prose :where(h3 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
}
.prose :where(h4):not(:where([class~="not-prose"] *)) {
  color: #111827;
  font-weight: 600;
  margin-top: 1.5em;
  margin-bottom: 0.5em;
  line-height: 1.5;
}
.prose :where(h4 strong):not(:where([class~="not-prose"] *)) {
  font-weight: 700;
}
.prose :where(figure figcaption):not(:where([class~="not-prose"] *)) {
  color: #6b7280;
  font-size: 0.875em;
  line-height: 1.4285714;
  margin-top: 0.8571429em;
}
.prose :where(code):not(:where([class~="not-prose"] *)) {
  color: #111827;
  font-weight: 600;
  font-size: 0.875em;
}
.prose :where(code):not(:where([class~="not-prose"] *))::before {
  content: "`";
}
.prose :where(code):not(:where([class~="not-prose"] *))::after {
  content: "`";
}
.prose :where(a code):not(:where([class~="not-prose"] *)) {
  color: #111827;
}
.prose :where(pre):not(:where([class~="not-prose"] *)) {
  color: #e5e7eb;
  background-color: #1f2937;
  overflow-x: auto;
  font-size: 0.875em;
  line-height: 1.7142857;
  margin-top: 1.7142857em;
  margin-bottom: 1.7142857em;
  border-radius: 0.375rem;
  padding-top: 0.8571429em;
  padding-right: 1.1428571em;
  padding-bottom: 0.8571429em;
  padding-left: 1.1428571em;
}
.prose :where(pre code):not(:where([class~="not-prose"] *)) {
  background-color: transparent;
  border-width: 0;
  border-radius: 0;
  padding: 0;
  font-weight: 400;
  color: inherit;
  font-size: inherit;
  font-family: inherit;
  line-height: inherit;
}
.prose :where(pre code):not(:where([class~="not-prose"] *))::before {
  content: none;
}
.prose :where(pre code):not(:where([class~="not-prose"] *))::after {
  content: none;
}
.prose :where(table):not(:where([class~="not-prose"] *)) {
  width: 100%;
  table-layout: auto;
  text-align: left;
  margin-top: 2em;
  margin-bottom: 2em;
  font-size: 0.875em;
  line-height: 1.7142857;
}
.prose :where(thead):not(:where([class~="not-prose"] *)) {
  color: #111827;
  font-weight: 600;
  border-bottom-width: 1px;
  border-bottom-color: #d1d5db;
}
.prose :where(thead th):not(:where([class~="not-prose"] *)) {
  vertical-align: bottom;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}
.prose :where(tbody tr):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 1px;
  border-bottom-color: #e5e7eb;
}
.prose :where(tbody tr:last-child):not(:where([class~="not-prose"] *)) {
  border-bottom-width: 0;
}
.prose :where(tbody td):not(:where([class~="not-prose"] *)) {
  vertical-align: top;
  padding-top: 0.5714286em;
  padding-right: 0.5714286em;
  padding-bottom: 0.5714286em;
  padding-left: 0.5714286em;
}
.prose {
  font-size: 1rem;
  line-height: 1.75;
}
.prose :where(p):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}
.prose :where(img):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(video):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(figure):not(:where([class~="not-prose"] *)) {
  margin-top: 2em;
  margin-bottom: 2em;
}
.prose :where(figure > *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
  margin-bottom: 0;
}
.prose :where(h2 code):not(:where([class~="not-prose"] *)) {
  font-size: 0.875em;
}
.prose :where(h3 code):not(:where([class~="not-prose"] *)) {
  font-size: 0.9em;
}
.prose :where(ol):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}
.prose :where(ul):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
  margin-bottom: 1.25em;
}
.prose :where(li):not(:where([class~="not-prose"] *)) {
  margin-top: 0.5em;
  margin-bottom: 0.5em;
}
.prose > :where(ul > li p):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.prose > :where(ul > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}
.prose > :where(ul > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}
.prose > :where(ol > li > *:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 1.25em;
}
.prose > :where(ol > li > *:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 1.25em;
}
.prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}
.prose :where(hr + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(h2 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(h3 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(h4 + *):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}
.prose :where(thead th:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}
.prose :where(thead th:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}
.prose :where(tbody td:first-child):not(:where([class~="not-prose"] *)) {
  padding-left: 0;
}
.prose :where(tbody td:last-child):not(:where([class~="not-prose"] *)) {
  padding-right: 0;
}
.prose > :where(:first-child):not(:where([class~="not-prose"] *)) {
  margin-top: 0;
}
.prose > :where(:last-child):not(:where([class~="not-prose"] *)) {
  margin-bottom: 0;
}
.alert>:not([hidden])~:not([hidden]) {
  --tw-space-y-reverse: 0;
  margin-top: calc(0.5rem*(1 - var(--tw-space-y-reverse)));
  margin-bottom: calc(0.5rem*var(--tw-space-y-reverse));
}
.alert {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-between;
  --tw-bg-opacity: 1;
  background-color: hsla(var(--b2)/var(--tw-bg-opacity,1));
  padding: 1rem;
  border-radius: var(--rounded-box,1rem);
}
@media (min-width:768px) {

  .alert>:not([hidden])~:not([hidden]) {
    --tw-space-y-reverse: 0;
    margin-top: calc(0px*(1 - var(--tw-space-y-reverse)));
    margin-bottom: calc(0px*var(--tw-space-y-reverse));
  }

  .alert {
    flex-direction: row;
  }
}
.alert>* {
  display: flex;
}
.artboard {
  width: 100%;
}
.badge {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  transition-duration: .15s;
  transition-duration: .2s;
  transition-timing-function: cubic-bezier(.4,0,.2,1);
  height: 1.25rem;
  font-size: .875rem;
  line-height: 1.25rem;
  width: -webkit-fit-content;
  width: -moz-fit-content;
  width: fit-content;
  padding-left: .563rem;
  padding-right: .563rem;
  --tw-bg-opacity: 1;
  background-color: hsla(var(--n)/var(--tw-bg-opacity,1));
  --tw-border-opacity: 1;
  border-color: hsla(var(--n)/var(--tw-border-opacity,1));
  border-width: 1px;
  --tw-text-opacity: 1;
  color: hsla(var(--nc)/var(--tw-text-opacity,1));
  border-radius: var(--rounded-badge,1.9rem);
}
.btn {
  border-color: transparent;
  border-color: hsla(var(--n)/var(--tw-border-opacity,1));
  cursor: pointer;
  display: inline-flex;
  flex-wrap: wrap;
  align-items: center;
  justify-content: center;
  flex-shrink: 0;
  text-align: center;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  transition-duration: .15s;
  transition-duration: .2s;
  transition-timing-function: cubic-bezier(.4,0,.2,1);
  border-radius: var(--rounded-btn,.5rem);
  height: 3rem;
  font-size: .875rem;
  line-height: 1.25rem;
  line-height: 1em;
  padding-left: 1rem;
  padding-right: 1rem;
  min-height: 3rem;
  font-weight: 600;
  text-transform: uppercase;
  text-transform: var(--btn-text-case,uppercase);
  border-width: var(--border-btn,1px);
  -webkit-animation: button-pop var(--animation-btn,.25s) ease-out;
  animation: button-pop var(--animation-btn,.25s) ease-out;
  --tw-bg-opacity: 1;
  background-color: hsla(var(--n)/var(--tw-bg-opacity,1));
  --tw-border-opacity: 1;
  --tw-text-opacity: 1;
  color: hsla(var(--nc)/var(--tw-text-opacity,1));
}
.btn:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.btn-disabled,.btn[disabled] {
  pointer-events: none;
  --tw-bg-opacity: 1;
  --tw-bg-opacity: 0.2;
  background-color: hsla(var(--n)/var(--tw-bg-opacity,1));
  --tw-border-opacity: 0;
  --tw-text-opacity: 1;
  --tw-text-opacity: 0.2;
  color: hsla(var(--bc)/var(--tw-text-opacity,1));
}
.btn.loading,.btn.loading:hover {
  pointer-events: none;
}
.btn.loading:before {
  border-radius: 9999px;
  border-width: 2px;
  height: 1rem;
  margin-right: .5rem;
  width: 1rem;
  -webkit-animation: spin 2s linear infinite;
  animation: spin 2s linear infinite;
  content: "";
  border-color: transparent currentColor currentColor transparent;
}
@media (prefers-reduced-motion:reduce) {

  .btn.loading:before {
    -webkit-animation: spin 10s linear infinite;
    animation: spin 10s linear infinite;
  }
}
@-webkit-keyframes spin {

  0% {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(1turn);
  }
}
@keyframes spin {

  0% {
    transform: rotate(0deg);
  }

  to {
    transform: rotate(1turn);
  }
}
.btn-group>input[type=radio].btn {
  -webkit-appearance: none;
  -moz-appearance: none;
  appearance: none;
}
.btn-group>input[type=radio].btn:before {
  content: attr(data-title);
}
.card {
  display: flex;
  flex-direction: column;
  overflow: hidden;
  position: relative;
  border-radius: var(--rounded-box,1rem);
}
.card:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.card-body {
  display: flex;
  flex-direction: column;
  flex: 1 1 auto;
  padding: var(--padding-card,2rem);
}
.card figure,.card figure>* {
  width: 100%;
}
.card-actions {
  display: flex;
  flex-wrap: wrap;
  align-items: flex-start;
  margin-left: -.25rem;
  margin-right: -.25rem;
}
.card-actions>* {
  margin: .25rem;
}
.card.image-full {
  display: grid;
}
.card.image-full:before {
  position: relative;
  content: "";
  --tw-bg-opacity: 1;
  background-color: hsla(var(--n)/var(--tw-bg-opacity,1));
  opacity: .75;
  z-index: 10;
  border-radius: var(--rounded-box,1rem);
}
.card.image-full:before,.card.image-full>* {
  grid-column-start: 1;
  grid-row-start: 1;
}
.card.image-full>figure img {
  height: 100%;
  -o-object-fit: cover;
  object-fit: cover;
}
.card.image-full>.card-body {
  position: relative;
  --tw-text-opacity: 1;
  color: hsla(var(--nc)/var(--tw-text-opacity,1));
  z-index: 20;
}
.divider {
  display: flex;
  align-items: center;
  height: 1rem;
  margin-top: 1rem;
  margin-bottom: 1rem;
}
.divider:after,.divider:before {
  content: "";
  flex-grow: 1;
  --tw-bg-opacity: 1;
  --tw-bg-opacity: var(--tw-border-opacity,0.1);
  background-color: hsla(var(--bc)/var(--tw-bg-opacity,1));
  height: .125rem;
}
.indicator .indicator-item {
  z-index: 1;
  position: absolute;
  --tw-translate-x: 0;
  --tw-translate-x: 50%;
  --tw-translate-y: 0;
  --tw-translate-y: -50%;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  top: 0;
  right: 0;
  bottom: auto;
  left: auto;
}
.indicator .indicator-item.indicator-start {
  left: 0;
  right: auto;
  --tw-translate-x: -50%;
}
.indicator .indicator-item.indicator-center {
  right: 50%;
  left: 50%;
  --tw-translate-x: -50%;
}
.indicator .indicator-item.indicator-end {
  right: 0;
  left: auto;
  --tw-translate-x: 50%;
}
.indicator .indicator-item.indicator-bottom {
  bottom: 0;
  top: auto;
  --tw-translate-y: 50%;
}
.indicator .indicator-item.indicator-middle {
  top: 50%;
  bottom: 50%;
  --tw-translate-y: -50%;
}
.indicator .indicator-item.indicator-top {
  top: 0;
  bottom: auto;
  --tw-translate-y: -50%;
}
.link {
  cursor: pointer;
  text-decoration: underline;
}
.menu {
  display: flex;
  flex-direction: column;
  overflow: hidden;
}
.menu.horizontal {
  display: inline-flex;
  flex-direction: row;
}
.menu.horizontal :where(li) {
  flex-direction: row;
}
.menu :where(li) {
  display: flex;
  flex-direction: column;
  align-items: stretch;
}
.menu :where(li)>a,.menu :where(li)>span {
  display: flex;
  align-items: center;
  transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  transition-duration: .15s;
  transition-duration: .2s;
  transition-timing-function: cubic-bezier(.4,0,.2,1);
}
.menu :where(li)>a {
  cursor: pointer;
}
.menu :where(li)>a:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.menu :where(li).disabled>a,.menu :where(li).disabled>span {
  cursor: auto;
}
.navbar {
  display: flex;
  align-items: center;
  padding: var(--navbar-padding,.5rem);
  min-height: 4rem;
}
.navbar>* {
  display: flex;
  align-items: center;
}
.stats {
  display: inline-grid;
  overflow: hidden;
  overflow-x: auto;
  grid-auto-flow: column;
  border-radius: var(--rounded-box,1rem);
}
.stat {
  display: inline-grid;
  width: 100%;
  grid-template-columns: 1fr auto;
  --tw-bg-opacity: 1;
  background-color: hsla(var(--b1)/var(--tw-bg-opacity,1));
  padding: 1rem 1.5rem;
  --tw-text-opacity: 1;
  color: hsla(var(--bc)/var(--tw-text-opacity,1));
}
.stat-title {
  white-space: nowrap;
  grid-column-start: 1;
  opacity: .5;
}
.stat-value {
  white-space: nowrap;
  grid-column-start: 1;
  font-weight: 800;
  font-size: 2.25rem;
  line-height: 2.5rem;
}
.stats.grid-flow-row {
  grid-auto-rows: minmax(0,1fr);
}
.steps {
  counter-reset: step;
  grid-auto-columns: 1fr;
  display: inline-grid;
  overflow: hidden;
  overflow-x: auto;
  grid-auto-flow: column;
}
.steps .step {
  display: grid;
  place-items: center;
  text-align: center;
  grid-template-columns: repeat(1,minmax(0,1fr));
  grid-template-rows: repeat(2,minmax(0,1fr));
  grid-template-rows: 40px 1fr;
  min-width: 4rem;
}
.steps-vertical .step {
  display: grid;
  grid-template-columns: repeat(2,minmax(0,1fr));
  grid-template-columns: 40px 1fr;
  grid-template-rows: repeat(1,minmax(0,1fr));
  grid-template-rows: auto;
  gap: .5rem;
  min-height: 4rem;
  justify-items: start;
}
.textarea {
  flex-shrink: 1;
  transition-property: background-color,border-color,color,fill,stroke,opacity,box-shadow,transform;
  transition-duration: .15s;
  transition-duration: .2s;
  transition-timing-function: cubic-bezier(.4,0,.2,1);
  font-size: .875rem;
  line-height: 1.25rem;
  line-height: 2;
  padding: .5rem 1rem;
  min-height: 3rem;
  --tw-bg-opacity: 1;
  background-color: hsla(var(--b1)/var(--tw-bg-opacity,1));
  --tw-border-opacity: 1;
  --tw-border-opacity: 0;
  border-color: hsla(var(--bc)/var(--tw-border-opacity,1));
  border-width: 1px;
  border-radius: var(--rounded-btn,.5rem);
}
.textarea:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
  box-shadow: 0 0 0 2px hsl(var(--b1)),0 0 0 4px hsla(var(--bc)/.2);
}
.btn .badge {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--b1)/var(--tw-bg-opacity,1));
  border-color: transparent;
  --tw-text-opacity: 1;
  color: hsla(var(--bc)/var(--tw-text-opacity,1));
}
.btn .badge-outline {
  background-color: transparent;
  --tw-border-opacity: 1;
  border-color: hsla(var(--b2)/var(--tw-border-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--b2)/var(--tw-text-opacity,1));
}
.btn-outline .badge {
  --tw-border-opacity: 1;
  border-color: hsla(var(--nf)/var(--tw-border-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--nc)/var(--tw-text-opacity,1));
}
.btn-outline.btn-primary .badge {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--p)/var(--tw-bg-opacity,1));
  --tw-border-opacity: 1;
  border-color: hsla(var(--p)/var(--tw-border-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--pc)/var(--tw-text-opacity,1));
}
.btn-outline.btn-secondary .badge {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--s)/var(--tw-bg-opacity,1));
  --tw-border-opacity: 1;
  border-color: hsla(var(--s)/var(--tw-border-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--sc)/var(--tw-text-opacity,1));
}
.btn-outline.btn-accent .badge {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--a)/var(--tw-bg-opacity,1));
  --tw-border-opacity: 1;
  border-color: hsla(var(--a)/var(--tw-border-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--ac)/var(--tw-text-opacity,1));
}
.btn-outline .badge.outline {
  background-color: transparent;
  --tw-border-opacity: 1;
  border-color: hsla(var(--nf)/var(--tw-border-opacity,1));
}
.btn-outline.btn-primary .badge-outline {
  background-color: transparent;
  --tw-border-opacity: 1;
  border-color: hsla(var(--p)/var(--tw-border-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--p)/var(--tw-text-opacity,1));
}
.btn-outline:hover .badge {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--b2)/var(--tw-bg-opacity,1));
  --tw-border-opacity: 1;
  border-color: hsla(var(--b2)/var(--tw-border-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--bc)/var(--tw-text-opacity,1));
}
.btn-outline:hover .badge.outline {
  --tw-border-opacity: 1;
  border-color: hsla(var(--b2)/var(--tw-border-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--nc)/var(--tw-text-opacity,1));
}
.btn-outline.btn-primary:hover .badge {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--pc)/var(--tw-bg-opacity,1));
  --tw-border-opacity: 1;
  border-color: hsla(var(--pc)/var(--tw-border-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--p)/var(--tw-text-opacity,1));
}
.btn-outline.btn-primary:hover .badge.outline {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--pf)/var(--tw-bg-opacity,1));
  --tw-border-opacity: 1;
  border-color: hsla(var(--pc)/var(--tw-border-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--pc)/var(--tw-text-opacity,1));
}
.btn-outline.btn-secondary:hover .badge {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--sc)/var(--tw-bg-opacity,1));
  --tw-border-opacity: 1;
  border-color: hsla(var(--sc)/var(--tw-border-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--s)/var(--tw-text-opacity,1));
}
.btn-outline.btn-secondary:hover .badge.outline {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--sf)/var(--tw-bg-opacity,1));
  --tw-border-opacity: 1;
  border-color: hsla(var(--sc)/var(--tw-border-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--sc)/var(--tw-text-opacity,1));
}
.btn-outline.btn-accent:hover .badge {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--ac)/var(--tw-bg-opacity,1));
  --tw-border-opacity: 1;
  border-color: hsla(var(--ac)/var(--tw-border-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--a)/var(--tw-text-opacity,1));
}
.btn-outline.btn-accent:hover .badge.outline {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--af)/var(--tw-bg-opacity,1));
  --tw-border-opacity: 1;
  border-color: hsla(var(--ac)/var(--tw-border-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--ac)/var(--tw-text-opacity,1));
}
.btn:active:focus,.btn:active:hover {
  -webkit-animation: none;
  animation: none;
  transform: scale(var(--btn-focus-scale,.95));
}
.btn-active,.btn:hover {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--nf)/var(--tw-bg-opacity,1));
  --tw-border-opacity: 1;
  border-color: hsla(var(--nf)/var(--tw-border-opacity,1));
}
.btn:focus-visible {
  box-shadow: 0 0 0 2px hsl(var(--b1)),0 0 0 4px hsl(var(--nf));
}
.btn-primary {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--p)/var(--tw-bg-opacity,1));
  --tw-border-opacity: 1;
  border-color: hsla(var(--p)/var(--tw-border-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--pc)/var(--tw-text-opacity,1));
}
.btn-primary.btn-active,.btn-primary:hover {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--pf)/var(--tw-bg-opacity,1));
  --tw-border-opacity: 1;
  border-color: hsla(var(--pf)/var(--tw-border-opacity,1));
}
.btn-primary:focus-visible {
  box-shadow: 0 0 0 2px hsl(var(--b1)),0 0 0 4px hsl(var(--p));
}
.btn.glass.btn-active,.btn.glass:hover {
  --glass-opacity: 25%;
  --glass-border-opacity: 15%;
}
.btn.glass:focus-visible {
  box-shadow: 0 0 0 2px currentColor;
}
.btn-outline.btn-primary {
  --tw-text-opacity: 1;
  color: hsla(var(--p)/var(--tw-text-opacity,1));
}
.btn-outline.btn-primary:hover {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--pf)/var(--tw-bg-opacity,1));
  --tw-border-opacity: 1;
  border-color: hsla(var(--pf)/var(--tw-border-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--pc)/var(--tw-text-opacity,1));
}
.btn.loading.btn-circle:before,.btn.loading.btn-square:before {
  margin-right: 0;
}
.btn.loading.btn-lg:before,.btn.loading.btn-xl:before {
  height: 1.25rem;
  width: 1.25rem;
}
.btn.loading.btn-sm:before,.btn.loading.btn-xs:before {
  height: .75rem;
  width: .75rem;
}
.btn-group>.btn-active,.btn-group>input[type=radio]:checked.btn {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--p)/var(--tw-bg-opacity,1));
  --tw-border-opacity: 1;
  border-color: hsla(var(--p)/var(--tw-border-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--pc)/var(--tw-text-opacity,1));
}
.btn-group>.btn-active:focus-visible,.btn-group>input[type=radio]:checked.btn:focus-visible {
  box-shadow: 0 0 0 2px hsl(var(--b1)),0 0 0 4px hsl(var(--p));
}
.btn-group>.btn:not(:first-child) {
  border-top-left-radius: 0;
  border-bottom-left-radius: 0;
  margin-left: -1px;
}
.btn-group>.btn:not(:last-child) {
  border-top-right-radius: 0;
  border-bottom-right-radius: 0;
}
@-webkit-keyframes button-pop {

  0% {
    transform: scale(var(--btn-focus-scale,.95));
  }

  40% {
    transform: scale(1.02);
  }

  to {
    transform: scale(1);
  }
}
@keyframes button-pop {

  0% {
    transform: scale(var(--btn-focus-scale,.95));
  }

  40% {
    transform: scale(1.02);
  }

  to {
    transform: scale(1);
  }
}
.card:focus-visible {
  box-shadow: 0 0 0 2px currentColor;
}
.card.bordered {
  --tw-border-opacity: 1;
  border-color: hsla(var(--b2)/var(--tw-border-opacity,1));
  border-width: 1px;
}
.card.compact .card-body {
  font-size: .875rem;
  line-height: 1.25rem;
  padding: 1rem;
}
.card.compact .card-title {
  margin-bottom: .25rem;
}
.card-title {
  font-weight: 600;
  font-size: 1.25rem;
  line-height: 1.75rem;
  margin-bottom: .75rem;
}
.card-actions:first-child {
  margin-bottom: .5rem;
}
.card-actions:last-child {
  margin-top: 1.5rem;
}
@-webkit-keyframes checkmark {

  0% {
    background-position-y: 5px;
  }

  50% {
    background-position-y: -2px;
  }

  to {
    background-position-y: 0;
  }
}
@keyframes checkmark {

  0% {
    background-position-y: 5px;
  }

  50% {
    background-position-y: -2px;
  }

  to {
    background-position-y: 0;
  }
}
.divider:not(:empty):before {
  margin-right: 1rem;
}
.divider:not(:empty):after {
  margin-left: 1rem;
}
.drawer-toggle:focus-visible~.drawer-content .drawer-button.btn-primary {
  box-shadow: 0 0 0 2px hsl(var(--b1)),0 0 0 4px hsl(var(--p));
}
.link:focus {
  outline: 2px solid transparent;
  outline-offset: 2px;
}
.link:focus-visible {
  box-shadow: 0 0 0 2px currentColor;
}
.menu.horizontal li.bordered>a,.menu.horizontal li.bordered>span {
  --tw-border-opacity: 1;
  border-color: hsla(var(--p)/var(--tw-border-opacity,1));
  border-left-width: 0;
  border-bottom-width: 4px;
}
.menu[class*=p-] li a {
  border-radius: var(--rounded-btn,.5rem);
}
.menu li>a,.menu li>span {
  padding: .75rem 1.25rem;
  color: currentColor;
}
.menu li>a:focus,.menu li>a:hover {
  --tw-bg-opacity: 1;
  --tw-bg-opacity: 0.1;
  background-color: hsla(var(--bc)/var(--tw-bg-opacity,1));
}
.menu li>a.active {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--p)/var(--tw-bg-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--pc)/var(--tw-text-opacity,1));
}
.menu li>a:active {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--pf)/var(--tw-bg-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--pc)/var(--tw-text-opacity,1));
}
.menu li.disabled>a:hover,.menu li.disabled>span:hover {
  background-color: transparent;
}
.menu li.disabled>a,.menu li.disabled>span {
  --tw-text-opacity: 1;
  --tw-text-opacity: 0.2;
  color: hsla(var(--bc)/var(--tw-text-opacity,1));
}
.menu li.bordered a,.menu li.bordered span {
  --tw-border-opacity: 1;
  border-color: hsla(var(--p)/var(--tw-border-opacity,1));
  border-left-width: 4px;
}
.menu li.hover-bordered a {
  border-color: transparent;
  border-left-width: 4px;
}
.menu li.hover-bordered a:hover {
  --tw-border-opacity: 1;
  border-color: hsla(var(--p)/var(--tw-border-opacity,1));
}
.menu ul {
  padding-left: 1.5rem;
}
.menu.compact li>a,.menu.compact li>span {
  font-size: .875rem;
  line-height: 1.25rem;
  padding-top: .5rem;
  padding-bottom: .5rem;
}
.menu .menu-title>a,.menu .menu-title>span {
  font-weight: 700;
  font-size: .75rem;
  line-height: 1rem;
  padding-top: .25rem;
  padding-bottom: .25rem;
  --tw-text-opacity: 1;
  --tw-text-opacity: 0.4;
  color: hsla(var(--bc)/var(--tw-text-opacity,1));
}
@-webkit-keyframes radiomark {

  0% {
    box-shadow: 0 0 0 12px hsl(var(--b1)) inset,0 0 0 12px hsl(var(--b1)) inset,var(--focus-shadow);
  }

  50% {
    box-shadow: 0 0 0 3px hsl(var(--b1)) inset,0 0 0 3px hsl(var(--b1)) inset,var(--focus-shadow);
  }

  to {
    box-shadow: 0 0 0 4px hsl(var(--b1)) inset,0 0 0 4px hsl(var(--b1)) inset,var(--focus-shadow);
  }
}
@keyframes radiomark {

  0% {
    box-shadow: 0 0 0 12px hsl(var(--b1)) inset,0 0 0 12px hsl(var(--b1)) inset,var(--focus-shadow);
  }

  50% {
    box-shadow: 0 0 0 3px hsl(var(--b1)) inset,0 0 0 3px hsl(var(--b1)) inset,var(--focus-shadow);
  }

  to {
    box-shadow: 0 0 0 4px hsl(var(--b1)) inset,0 0 0 4px hsl(var(--b1)) inset,var(--focus-shadow);
  }
}
.stat+.stat {
  --tw-border-opacity: 1;
  --tw-border-opacity: 0.1;
  border-color: hsla(var(--bc)/var(--tw-border-opacity,1));
  border-left-width: 1px;
}
.stats.grid-flow-row .stat+.stat {
  border-left-width: 0;
  border-top-width: 1px;
}
.steps .step:before {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--b3)/var(--tw-bg-opacity,1));
  height: .5rem;
  top: 0;
  --tw-text-opacity: 1;
  color: hsla(var(--bc)/var(--tw-text-opacity,1));
  width: 100%;
  grid-column-start: 1;
  grid-row-start: 1;
  content: "";
  margin-left: -100%;
}
.steps .step:after {
  content: counter(step);
  counter-increment: step;
  z-index: 1;
  --tw-bg-opacity: 1;
  background-color: hsla(var(--b3)/var(--tw-bg-opacity,1));
  border-radius: 9999px;
  display: block;
  display: grid;
  place-items: center;
  place-self: center;
  height: 2rem;
  position: relative;
  --tw-text-opacity: 1;
  color: hsla(var(--bc)/var(--tw-text-opacity,1));
  width: 2rem;
  grid-column-start: 1;
  grid-row-start: 1;
}
.steps .step:first-child:before {
  content: none;
}
.steps .step[data-content]:after {
  content: attr(data-content);
}
.steps .step-neutral+.step-neutral:before,.steps .step-neutral:after {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--n)/var(--tw-bg-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--nc)/var(--tw-text-opacity,1));
}
.steps .step-primary+.step-primary:before,.steps .step-primary:after {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--p)/var(--tw-bg-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--pc)/var(--tw-text-opacity,1));
}
.steps .step-secondary+.step-secondary:before,.steps .step-secondary:after {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--s)/var(--tw-bg-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--sc)/var(--tw-text-opacity,1));
}
.steps .step-accent+.step-accent:before,.steps .step-accent:after {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--a)/var(--tw-bg-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--ac)/var(--tw-text-opacity,1));
}
.steps .step-info+.step-info:before {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--in)/var(--tw-bg-opacity,1));
}
.steps .step-info:after {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--in)/var(--tw-bg-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--b1)/var(--tw-text-opacity,1));
}
.steps .step-success+.step-success:before {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--su)/var(--tw-bg-opacity,1));
}
.steps .step-success:after {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--su)/var(--tw-bg-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--b1)/var(--tw-text-opacity,1));
}
.steps .step-warning+.step-warning:before {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--wa)/var(--tw-bg-opacity,1));
}
.steps .step-warning:after {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--wa)/var(--tw-bg-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--b1)/var(--tw-text-opacity,1));
}
.steps .step-error+.step-error:before {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--er)/var(--tw-bg-opacity,1));
}
.steps .step-error:after {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--er)/var(--tw-bg-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--b1)/var(--tw-text-opacity,1));
}
.steps-vertical .step:before {
  height: 100%;
  top: 0;
  width: .5rem;
  --tw-translate-x: 0;
  --tw-translate-x: -50%;
  --tw-translate-y: 0;
  --tw-translate-y: -50%;
  --tw-rotate: 0;
  --tw-skew-x: 0;
  --tw-skew-y: 0;
  --tw-scale-x: 1;
  --tw-scale-y: 1;
  transform: translateX(var(--tw-translate-x)) translateY(var(--tw-translate-y)) rotate(var(--tw-rotate)) skewX(var(--tw-skew-x)) skewY(var(--tw-skew-y)) scaleX(var(--tw-scale-x)) scaleY(var(--tw-scale-y));
  margin-left: 50%;
}
.textarea-disabled,.textarea[disabled] {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--b2)/var(--tw-bg-opacity,1));
  --tw-border-opacity: 1;
  border-color: hsla(var(--b2)/var(--tw-border-opacity,1));
  cursor: not-allowed;
  --tw-text-opacity: 0.2;
}
.textarea-disabled::-moz-placeholder,.textarea[disabled]::-moz-placeholder {
  --tw-placeholder-opacity: 1;
  --tw-placeholder-opacity: 0.2;
  color: hsla(var(--bc)/var(--tw-placeholder-opacity,1));
}
.textarea-disabled:-ms-input-placeholder,.textarea[disabled]:-ms-input-placeholder {
  --tw-placeholder-opacity: 1;
  --tw-placeholder-opacity: 0.2;
  color: hsla(var(--bc)/var(--tw-placeholder-opacity,1));
}
.textarea-disabled::-moz-placeholder, .textarea[disabled]::-moz-placeholder {
  --tw-placeholder-opacity: 1;
  --tw-placeholder-opacity: 0.2;
  color: hsla(var(--bc)/var(--tw-placeholder-opacity,1));
}
.textarea-disabled:-ms-input-placeholder, .textarea[disabled]:-ms-input-placeholder {
  --tw-placeholder-opacity: 1;
  --tw-placeholder-opacity: 0.2;
  color: hsla(var(--bc)/var(--tw-placeholder-opacity,1));
}
.textarea-disabled::placeholder,.textarea[disabled]::placeholder {
  --tw-placeholder-opacity: 1;
  --tw-placeholder-opacity: 0.2;
  color: hsla(var(--bc)/var(--tw-placeholder-opacity,1));
}
.prose {
  color: inherit;
}
.prose .lead,.prose a,.prose a code,.prose blockquote,.prose figure figcaption,.prose h1,.prose h2,.prose h3,.prose h4,.prose strong,.prose thead {
  color: inherit;
}
.prose .lead:hover,.prose a:hover,.prose a code:hover,.prose blockquote:hover,.prose figure figcaption:hover,.prose h1:hover,.prose h2:hover,.prose h3:hover,.prose h4:hover,.prose strong:hover,.prose thead:hover {
  color: inherit;
}
.prose code {
  background: hsla(var(--bc)/.2);
  color: hsl(var(--bc));
  padding: 2px 6px;
  border-radius: var(--rounded-badge);
}
.prose pre {
  background: hsl(var(--n));
  color: hsl(var(--nc));
  border-radius: var(--rounded-box);
}
.prose pre code {
  border-radius: none;
  background: inherit;
  color: inherit;
}
.prose code:after,.prose code:before {
  content: none;
}
.prose ol>li:before,.prose ol>li:hover:before {
  color: inherit;
}
.prose blockquote {
  border-left-color: hsl(var(--bc)/40%);
}
.prose ul>li:before {
  background-color: hsl(var(--bc)/40%);
}
.prose thead {
  border-bottom-color: hsl(var(--bc)/40%);
}
.prose tbody tr {
  border-bottom-color: hsl(var(--bc)/40%);
}
.rounded-box {
  border-radius: var(--rounded-box,1rem);
}
.artboard-demo {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  flex: none;
}
.artboard.phone {
  width: 320px;
}
.artboard.phone-1 {
  width: 320px;
  height: 568px;
}
.artboard.phone-1.horizontal {
  width: 568px;
  height: 320px;
}
.artboard.phone-2 {
  width: 375px;
  height: 667px;
}
.artboard.phone-2.horizontal {
  width: 667px;
  height: 375px;
}
.artboard.phone-3 {
  width: 414px;
  height: 736px;
}
.artboard.phone-3.horizontal {
  width: 736px;
  height: 414px;
}
.artboard.phone-4 {
  width: 375px;
  height: 812px;
}
.artboard.phone-4.horizontal {
  width: 812px;
  height: 375px;
}
.artboard.phone-5 {
  width: 414px;
  height: 896px;
}
.artboard.phone-5.horizontal {
  width: 896px;
  height: 414px;
}
.artboard.phone-6 {
  width: 320px;
  height: 1024px;
}
.artboard.phone-6.horizontal {
  width: 1024px;
  height: 320px;
}
.alert-info {
  --tw-bg-opacity: 1;
  --tw-bg-opacity: 0.1;
  background-color: hsla(var(--in)/var(--tw-bg-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--in)/var(--tw-text-opacity,1));
}
.artboard-demo {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--b1)/var(--tw-bg-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--bc)/var(--tw-text-opacity,1));
  border-radius: var(--rounded-box,1rem);
  box-shadow: 0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px 0 rgba(0,0,0,.06);
}
.avatar.online:before {
  content: "";
  --tw-bg-opacity: 1;
  background-color: hsla(var(--su)/var(--tw-bg-opacity,1));
  border-radius: 9999px;
  display: block;
  position: absolute;
  z-index: 10;
  width: 15%;
  height: 15%;
  top: 7%;
  right: 7%;
  box-shadow: 0 0 0 2px hsl(var(--b1));
}
.badge-secondary {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--s)/var(--tw-bg-opacity,1));
  --tw-border-opacity: 1;
  border-color: hsla(var(--s)/var(--tw-border-opacity,1));
  --tw-text-opacity: 1;
  color: hsla(var(--sc)/var(--tw-text-opacity,1));
}
.badge-outline.badge-secondary {
  --tw-text-opacity: 1;
  color: hsla(var(--s)/var(--tw-text-opacity,1));
}
.float-right {
  float: right;
}
.float-left {
  float: left;
}
.m-8 {
  margin: 2rem;
}
.mx-auto {
  margin-left: auto;
  margin-right: auto;
}
.mx-2 {
  margin-left: 0.5rem;
  margin-right: 0.5rem;
}
.mb-2 {
  margin-bottom: 0.5rem;
}
.mr-4 {
  margin-right: 1rem;
}
.mb-8 {
  margin-bottom: 2rem;
}
.grid {
  display: grid;
}
.h-6 {
  height: 1.5rem;
}
.w-full {
  width: 100%;
}
.w-6 {
  width: 1.5rem;
}
.flex-1 {
  flex: 1 1 0%;
}
.grid-cols-1 {
  grid-template-columns: repeat(1, minmax(0, 1fr));
}
.grid-cols-2 {
  grid-template-columns: repeat(2, minmax(0, 1fr));
}
.justify-end {
  justify-content: flex-end;
}
.gap-6 {
  gap: 1.5rem;
}
.border-b-2 {
  border-bottom-width: 2px;
}
.border-b-accent {
  --tw-border-opacity: 1;
  border-bottom-color: hsla(var(--a) / var(--tw-border-opacity));
}
.bg-secondary {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--s) / var(--tw-bg-opacity));
}
.bg-primary {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--p) / var(--tw-bg-opacity));
}
.bg-base-200 {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--b2) / var(--tw-bg-opacity));
}
.bg-base-100 {
  --tw-bg-opacity: 1;
  background-color: hsla(var(--b1) / var(--tw-bg-opacity));
}
.stroke-current {
  stroke: currentColor;
}
.p-1 {
  padding: 0.25rem;
}
.px-2 {
  padding-left: 0.5rem;
  padding-right: 0.5rem;
}
.py-4 {
  padding-top: 1rem;
  padding-bottom: 1rem;
}
.px-3 {
  padding-left: 0.75rem;
  padding-right: 0.75rem;
}
.text-center {
  text-align: center;
}
.text-5xl {
  font-size: 3rem;
  line-height: 1;
}
.text-4xl {
  font-size: 2.25rem;
  line-height: 2.5rem;
}
.font-medium {
  font-weight: 500;
}
.font-extrabold {
  font-weight: 800;
}
.font-bold {
  font-weight: 700;
}
.text-secondary-content {
  --tw-text-opacity: 1;
  color: hsla(var(--sc) / var(--tw-text-opacity));
}
.text-neutral-content {
  --tw-text-opacity: 1;
  color: hsla(var(--nc) / var(--tw-text-opacity));
}
.text-secondary {
  --tw-text-opacity: 1;
  color: hsla(var(--s) / var(--tw-text-opacity));
}
.text-primary {
  --tw-text-opacity: 1;
  color: hsla(var(--p) / var(--tw-text-opacity));
}
.text-success {
  --tw-text-opacity: 1;
  color: hsla(var(--su) / var(--tw-text-opacity));
}
.shadow-xl {
  --tw-shadow: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 10px 10px -5px rgb(0 0 0 / 0.04);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.shadow-lg {
  --tw-shadow: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -2px rgb(0 0 0 / 0.05);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}
.shadow {
  --tw-shadow: 0 1px 3px 0 rgb(0 0 0 / 0.1), 0 1px 2px 0 rgb(0 0 0 / 0.06);
  box-shadow: var(--tw-ring-offset-shadow, 0 0 #0000), var(--tw-ring-shadow, 0 0 #0000), var(--tw-shadow);
}

:root {
  --teal: #2a4f5f;
  --pale-green: #9ef5ca;
  --salmon: #f28879;
}

@media (min-width: 640px) {

  .menu.sm\:horizontal {
    display: inline-flex;
    flex-direction: row;
  }

  .menu.sm\:horizontal :where(li) {
    flex-direction: row;
  }

  .menu.horizontal li.sm\:bordered>a,.menu.horizontal li.sm\:bordered>span {
    --tw-border-opacity: 1;
    border-color: hsla(var(--p)/var(--tw-border-opacity,1));
    border-left-width: 0;
    border-bottom-width: 4px;
  }

  .menu.horizontal li.sm\:bordered>a,.menu.horizontal li.sm\:bordered>span {
    --tw-border-opacity: 1;
    border-color: hsla(var(--p)/var(--tw-border-opacity,1));
    border-left-width: 0;
    border-bottom-width: 4px;
  }

  .artboard.phone-1.sm\:horizontal {
    width: 568px;
    height: 320px;
  }

  .artboard.phone-2.sm\:horizontal {
    width: 667px;
    height: 375px;
  }

  .artboard.phone-3.sm\:horizontal {
    width: 736px;
    height: 414px;
  }

  .artboard.phone-4.sm\:horizontal {
    width: 812px;
    height: 375px;
  }

  .artboard.phone-5.sm\:horizontal {
    width: 896px;
    height: 414px;
  }

  .artboard.phone-6.sm\:horizontal {
    width: 1024px;
    height: 320px;
  }

  .sm\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}

@media (min-width: 768px) {

  .md\:grid-cols-3 {
    grid-template-columns: repeat(3, minmax(0, 1fr));
  }
}

@media (min-width: 1024px) {

  .lg\:card-side {
    align-items: stretch;
    flex-direction: row;
  }

  .lg\:card-side>figure {
    height: 100%;
    max-width: none;
    width: auto;
  }

  .lg\:card-side>figure>* {
    width: auto;
    max-width: none;
  }
}